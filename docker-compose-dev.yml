services:
  postgres:
    image: postgres:13
    container_name: dev-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "devdb"]
      interval: 10s
      retries: 5

  reviews-service:
    build:
      context: ./backend
    container_name: reviews_service
    restart: always
    env_file:
      - ./backend/.env.dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"

  redis:
    image: redis:6.2-alpine
    # restart: always
    container_name: dev-redis
    ports:
      - '6379:6379'
    command: ["redis-server", "--save", "20", "1", "--loglevel", "warning"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: dev-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"   
      - "15672:15672"  
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      retries: 5

  nlp-service:
    build:
      context: ./nlp_service
      dockerfile: Dockerfile  
    container_name: dev-nlp-service
    env_file:
      - ./nlp_service/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "8081:8080"

volumes:
  postgres_data:
  redis_data:
